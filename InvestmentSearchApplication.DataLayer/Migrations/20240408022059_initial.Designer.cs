// <auto-generated />
using InvestmentSearchApplication.DataLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace InvestmentSearchApplication.DataLayer.Migrations
{
    [DbContext(typeof(InvestmentSearchDbContext))]
    [Migration("20240408022059_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("InvestmentSearchApplication.Entities.Rating", b =>
                {
                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int>("EfficiencyReviewsCount")
                        .HasColumnType("int");

                    b.Property<int>("FinancialsReviewsCount")
                        .HasColumnType("int");

                    b.Property<decimal>("OverallRating")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OwnershipReviewsCount")
                        .HasColumnType("int");

                    b.Property<int>("ValuationReviewsCount")
                        .HasColumnType("int");

                    b.HasKey("StockId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("InvestmentSearchApplication.Entities.SWOTAnalysis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Opportunities")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<string>("Strengths")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Threats")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Weaknesses")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("StockId");

                    b.ToTable("SwotAnalyses");
                });

            modelBuilder.Entity("InvestmentSearchApplication.Entities.Stock", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ClosingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CurrentTradingPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Debt")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DividendYield")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("EnterpriseValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FaceValue")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FiftyTwoWeekHigh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("FiftyTwoWeekLow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("MarketCapitalization")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfShares")
                        .HasColumnType("int");

                    b.Property<decimal>("TodayHigh")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TodayLow")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("InvestmentSearchApplication.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("InvestmentSearchApplication.Entities.Rating", b =>
                {
                    b.HasOne("InvestmentSearchApplication.Entities.Stock", "Stock")
                        .WithOne("Rating")
                        .HasForeignKey("InvestmentSearchApplication.Entities.Rating", "StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("InvestmentSearchApplication.Entities.SWOTAnalysis", b =>
                {
                    b.HasOne("InvestmentSearchApplication.Entities.Stock", "Stock")
                        .WithMany("SWOTAnalyses")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
